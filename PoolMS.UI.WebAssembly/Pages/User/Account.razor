@page "/user/account"
@inject IUserService UserService
@inject ISubscriptionService SubscriptionService
@inject IPaymentService PaymentService
@inject NavigationManager NavigationManager
@inject IMapper _mapper
@attribute [Authorize]
@inject AuthService AuthService

@inject IJSRuntime JSRuntime

<div class="row mt-5 d-flex justify-content-around">
    <div class="col-12 col-md-4 shadow-sm mx-5">
        <div class="form-floating mt-2">
            <h2>Account info</h2>
        </div>
        <EditForm Model="user" class="form-floating" OnSubmit="HandleSubmit">
            <div class="form-floating">
                <div class="row form-floating mb-3">
                    <div class="form-floating col-6">
                        <InputText class="form-control" @bind-Value="user.Fname"  id="InputFirstName" placeholder="" />
                        <label for="InputFirstName">First name</label>
                    </div>
                    <div class="form-floating col-6">
                        <InputText class="form-control" @bind-Value="user.Sname"  id="InputLastName" placeholder=""/>
                        <label for="InputLastName">Last name</label>
                    </div>
                </div>
            </div>
            <div class="form-floating mb-3">
                <InputText class="form-control" @bind-Value="user.Email"   id="floatingInput" placeholder="name@example.com"/>
                <label for="floatingInput">Email address</label>
            </div>
            <div class="form-floating mb-3">
                <InputText class="form-control" @bind-Value="user.Phone"  id="InputPhone" placeholder="Phone"/>
                <label for="InputPhone">Phone</label>
            </div>

            <div class="form-floating mb-3">
                <div class="row form-floating mb-3 d-flex justify-content-around">
                    <div class="form-floating d-flex justify-content-between mb-3">                 
                        <button class="btn btn-danger" type="button" @onclick="()=> DeleteUser()" id="button-delete">Delete account</button>
                        <button class="btn btn-primary" type="submit" @onclick="()=> EditUser()" id="button-change">Change info</button>                     
                    </div>

                </div>
            </div>
        </EditForm>
        
    </div>
    <div class="col-12 col-md-5 shadow-sm mx-5 ">
        <div class="form-floating mb-3">
            <h2>Payment history</h2>
        </div>
        <div class="form-floating mb-3">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Payment number</th>
                        <th>Date</th>
                        <th>Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var payment in PaymentService.ItemList)
                    {
                        <tr>
                            <td>@payment.Id</td>
                            <td>@payment.PaymentDay</td>
                            <td>@payment.Amount</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="row mt-5 justify-content-around">
    <div class="col-12 col-md-4 shadow-sm mx-5">
        <div class="form-floating mb-3">
            <h2>Subscription list</h2>
        </div>
        <div class="form-loating mb-3">
            <button class="btn btn-danger" type="button" @onclick="()=>CreateSub()">Create</button>
        </div>
        <div class="form-floating mb-3">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Subscription number</th>
                        <th>Subtype</th>
                        <th>Start date</th>
                        <th>End date</th>
                        <th>Price</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var subscription in SubscriptionService.ItemList)
                    {
                        <tr>
                            <td>@subscription.Id</td>
                            <td>@subscription.SubType.Title</td>
                            <td>@subscription.StartDate</td>
                            <td>@subscription.EndDate</td>
                            <td>@subscription.SubType.Price</td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>

    </div>
    <div class="col-12 col-md-5 mx-5"></div>
</div>
@code {
    public UserUpdateDto user = new UserUpdateDto();
    protected override async Task OnInitializedAsync()
    {
        if(! await AuthService.IsUserAuthenticated())
        {
            NavigationManager.NavigateTo("/login");
            return;
        }
  

        var userrow = await UserService.GetUser();
        if (userrow is not null)
        {
            user = _mapper.Map<UserUpdateDto>(userrow);
            await SubscriptionService.GetByUser();
            await PaymentService.GetByUser();
        }
        else
        {
            NavigationManager.NavigateTo("/register");
        }
    }

    private async Task HandleSubmit()
    {
        await UserService.UpdateAsync(user);
        NavigationManager.NavigateTo("/user/account");
    }
    private async Task DeleteAccount(int id)
    {
        await UserService.DeleteAsync(id);
        NavigationManager.NavigateTo("/");
    }
    private async Task EditUser()
    {
        await UserService.UpdateAsync(user);
    }
    private async Task DeleteUser()
    {
        bool confirm = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete your account?");
        if (confirm)
        {
            await UserService.DeleteAsync(user.Id);
            NavigationManager.NavigateTo("/");
        }
    }
private void CreateSub()
    {
        NavigationManager.NavigateTo("/subscription/create");
    }
}
