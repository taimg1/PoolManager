@page "/role/{id:int}"
@inject IService<RoleDto, RoleCreateDto, RoleUpdateDto> RoleService
@inject NavigationManager NavigationManager
@inject IMapper _mapper

<EditForm Model="role" class="form-group" OnSubmit="HandleSubmit">
    <div class="row mt-5 ">
        <div class="col-12 col-md-3 border border-dark rounded shadow-sm  mx-auto ">
            <div class="form-group">
                <h2>Role</h2>
            </div>
            <div class="form-floating mb-3">
                <InputText class="form-control" @bind-Value="role.Title" id="RoleInput" placeholder="Role name"/>
                <label for="RoleInput">Role</label>
            </div>
            <div class="form-floating mb-3 text-center">
                <button class="btn btn-primary" type="submit">Edit</button>
            </div>
        </div>
    </div>
</EditForm>
@code {
    [Parameter]
    public int? Id { get; set; }
    public RoleUpdateDto role = new RoleUpdateDto();
    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            var result = await RoleService.GetByIdAsync((int)Id);
            if (result is not null)
            {
                var role = _mapper.Map<RoleUpdateDto>(result);
            }
            else
            {
                NavigationManager.NavigateTo("/role");
            }
        }
    }
    private async Task HandleSubmit()
    {
        if (Id is not null)
        {
            await RoleService.UpdateAsync(role);
        }
        NavigationManager.NavigateTo("/role");
    }

}
