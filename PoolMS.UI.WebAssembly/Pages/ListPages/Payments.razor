@page "/payments"


@inject IPaymentService PaymentService
@inject NavigationManager NavigationManager
@inject AuthorizeAdmin AuthorizeAdmin
@inject IJSRuntime JSRuntime

<div class="row mt-5 d-flex justify-content-around">
    <div class="col-12 col-md-5 shadow-sm mx-5 ">
        <div class="form-floating mb-3">
            <h2>Payment history</h2>
        </div>
        <div class="form-floating mb-3">
            <div class="input-group mb-3">
                <InputNumber TValue="int" class="form-control" placeholder="Search" @bind-Value="SearchValue" aria-label="Search" aria-describedby="button-addon2" />
                <button class="btn btn-primary" @onclick="()=> SearchButton()" type="button" id="button-addon2">Search</button>
            </div>

            <div class="input-group mb-3">
                <button class="btn btn-primary"  type="button">Add payment</button>
                <button class="btn btn-primary ml-3" @onclick="DownloadMonthlyIncomeReport" type="button">Download Monthly Income Rep</button>
                </div>
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Payment number</th>
                        <th>Date</th>
                        <th>Amount</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var payment in paymentDtos)
                     {
                        <tr>
                            <td>@payment.Id</td>
                            <td>@payment.PaymentDay</td>
                            <td>@payment.Amount</td>
                            <td>
                                <button class="btn btn-danger"
                                        @onclick="async () => await DeletePayment(payment.Id)">
                                    <i class="bi bi-trash3"></i>
                                </button>
                            </td>
                        </tr>}
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    private int SearchValue { get; set; }
    private List<PaymentDto> paymentDtos = new List<PaymentDto>();

    protected override async Task OnInitializedAsync()
    {
        if (!await AuthorizeAdmin.CheckUserRole()) 
            return;
        await AuthorizeAdmin.CheckUserRole();
        await PaymentService.GetAllAsync();
        paymentDtos = PaymentService.ItemList;
    }
    private async Task DeletePayment(int id)
    {
        await PaymentService.DeleteAsync(id);
        await SearchButton();
        StateHasChanged();
    }
    private async Task SearchButton()
    {
        if (SearchValue > 0)
        {
            var result = await PaymentService.GetByIdAsync(SearchValue);
            if (result != null)
            {
                paymentDtos = new List<PaymentDto> { result };
                return;
            }
        }
        paymentDtos = PaymentService.ItemList;
    }
    private async Task DownloadMonthlyIncomeReport()
    {
        var response = await PaymentService.GetMonthlyIncomeReport();
        var fileBytes = await response.Content.ReadAsByteArrayAsync();
        await JSRuntime.InvokeVoidAsync("SaveAsFile", "MonthlyIncomeReport.docx", Convert.ToBase64String(fileBytes));
    }


}
