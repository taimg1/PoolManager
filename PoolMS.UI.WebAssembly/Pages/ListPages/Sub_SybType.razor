@page "/sub_sybtype"

@inject IService<SubTypeDto, SubTypeCreateDto, SubTypeUpdateDto> SubTypeService
@inject ISubscriptionService SubscriptionService
@inject NavigationManager NavigationManager
@inject AuthorizeAdmin AuthorizeAdmin

<div class="row mt-5 d-flex justify-content-around">
    <div class="col-12 col-md-6 shadow-sm mx-5">
        <div class="form-floating mt-2">
            <h2>Subscription list</h2>
        </div>
        <div class="form-group mt-2">
            <button class="btn btn-primary" @onclick="CreatePageSub" type="submit">Create</button>
        </div>
        <div class="input-group mb-3">
            <InputNumber TValue="int" class="form-control" placeholder="Search" @bind-Value="SearchValue1" aria-label="Search" aria-describedby="button-addon2" />
            <button class="btn btn-primary" @onclick="()=> SearchButtonSub()" type="button" id="button-addon2">Search</button>
        </div>
        <div class="form-floating mb-3">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Subscription number</th>
                        <th>Subtype</th>
                        <th>Start date</th>
                        <th>End date</th>
                        <th>Price</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                    
                <tbody>
                    @foreach(var subscription in subscriptionDtos)
                    {
                        <tr>
                            <td>@subscription.Id</td>
                            <td>@subscription.SubType.Title</td>
                            <td>@subscription.StartDate</td>
                            <td>@subscription.EndDate</td>
                            <td>@subscription.SubType.Price</td>
                            <td>
                                <button class="btn btn-primary"
                                    @onclick="()=> ShowSubscription(subscription.Id)">
                                    <i class="oi oi-pencil"></i>
                                </button>
                            </td>
                            <td>
                                <button class="btn btn-danger"
                                        @onclick="async () => await DeleteSubscription(subscription.Id)">
                                    <i class="oi oi-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="col-12 col-md-4 shadow-sm mx-5">
        <div class="form-floating mt-2">
            <h2>Subtype list</h2>
        </div>
        <div class="form-group mt-2">
            <button class="btn btn-primary" @onclick="CreatePageSubType" type="submit">Create</button>
        </div>
        <div class="input-group mb-3">
            <InputNumber TValue="int" class="form-control" placeholder="Search" @bind-Value="SearchValue2" aria-label="Search" aria-describedby="button-addon2" />
            <button class="btn btn-primary" @onclick="()=> SearchButtonSubType()" type="button" id="button-addon2">Search</button>
        </div>
        <div class="form-floating mb-3">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>SubType number</th>
                        <th>Price</th>
                        <th>Edit</th>
                        <th>Delete</th>
                  </tr>
                </thead>
                <tbody>
                    @foreach(var subType in subTypeDtos)
                    {
                        <tr>
                            <td>@subType.Id</td>
                            <td>@subType.Title</td>
                            <td>@subType.Price</td>
                            <td>
                                <button class="btn btn-primary"
                                    @onclick="()=> ShowSubType(subType.Id)">
                                    <i class="oi oi-pencil"></i>
                                </button>
                            </td>
                            <td>
                                <button class="btn btn-danger"
                                        @onclick="async () => await DeleteSubType(subType.Id)">
                                    <i class="oi oi-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    private int SearchValue1 { get; set; }
    private int SearchValue2 { get; set; }
    private List<SubTypeDto> subTypeDtos = new List<SubTypeDto>();
    private List<SubscriptionDto> subscriptionDtos = new List<SubscriptionDto>();

    protected override async Task OnInitializedAsync()
    {
        if (!await AuthorizeAdmin.CheckUserRole()) 
            return;

        await SubTypeService.GetAllAsync();
        await SubscriptionService.GetAllAsync();
        StateHasChanged();
        subscriptionDtos = SubscriptionService.ItemList;
        subTypeDtos = SubTypeService.ItemList;
    }
    private async Task DeleteSubscription(int id)
    {
        await SubscriptionService.DeleteAsync(id);
        await SearchButtonSub();
    }

    private async Task DeleteSubType(int id)
    {
        await SubTypeService.DeleteAsync(id);
        await SearchButtonSubType();
    }
    private async Task SearchButtonSub()
    {
        if (SearchValue1 > 0)
        {
            var result = await SubscriptionService.GetByIdAsync(SearchValue1);
            if (result != null)
            {
                subscriptionDtos = new List<SubscriptionDto> { result };
                return;
            }
        }
        subscriptionDtos = SubscriptionService.ItemList;
    }
    private async Task SearchButtonSubType()
    {
        if (SearchValue2 > 0)
        {
            var result = await SubTypeService.GetByIdAsync(SearchValue2);
            if (result != null)
            {
                subTypeDtos = new List<SubTypeDto> { result };
                return;
            }
        }
        subTypeDtos = SubTypeService.ItemList;
    }


    public void ShowSubscription(int id)
    {
        NavigationManager.NavigateTo($"/subscription/{id}");
    }
    public void ShowSubType(int id)
    {
        NavigationManager.NavigateTo($"/subtype/{id}");
    }
    public void CreatePageSub()
    {
        NavigationManager.NavigateTo("/subscription/admin/create");
    }
    public void CreatePageSubType()
    {
        NavigationManager.NavigateTo("/subtype/create");
    }
}
