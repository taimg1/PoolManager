@page "/subscription/create"

@inject SubscriptionService SubscriptionService
@inject NavigationManager NavigationManager
@inject IMapper _mapper
@inject ILocalStorageService LocalStorage
@inject AuthService AuthService
@inject IService<SubTypeDto, SubTypeCreateDto, SubTypeUpdateDto> SubTypeService

<EditForm Model="subscription" class="form-group" OnSubmit="HandleSubmit">
    <div class="row mt-5 ">
        <div class="col-12 col-md-3 border border-dark rounded shadow-sm  mx-auto ">
            <div class="form-group">
                <h2>Subscription</h2>
            </div>
            <div class="form-floating mb-3">
                <InputSelect TValue="int" class="form-control" @bind-Value="subscription.SubTypeId" id="SubtypeIdInput">
                    @foreach (var subType in subTypes)
                    {
                        <option value="@subType.Id">@subType.Title</option>
                    }
                </InputSelect>
                <label for="SubtypeIdInput">Subtype</label>
            </div>
            <div class="form-floating mb-3 text-center">
                <button class="btn btn-primary" type="submit">Create</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public SubscriptionCreateUserDto subscription = new SubscriptionCreateUserDto();
    public IEnumerable<SubTypeDto> subTypes = new List<SubTypeDto>();
    protected override async Task OnInitializedAsync()
    {
        if (!await AuthService.IsUserAuthenticated())
        {
            NavigationManager.NavigateTo("/login");
            return;
        }
        await SubTypeService.GetAllAsync();
        subTypes = SubTypeService.ItemList;
    }
    private async Task HandleSubmit()
    {
        
        await LocalStorage.SetItemAsync("subscription", subscription);
        await SubscriptionService.AddByUser(subscription);
        NavigationManager.NavigateTo("/payment");
    }
}
